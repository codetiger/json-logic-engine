[
    "# Some error tests",
    {
        "description": "NaN is Truthy",
        "rule": { "!!": { "error": "NaN" } },
        "result": true,
        "data": null
    },
    {
        "description": "Arbitrary error is Truthy",
        "rule": { "!!": { "error": "Some error" } },
        "result": true,
        "data": null
    },
    {
        "description": "Coalesce an error",
        "rule": { "try": [{ "error": "Some error" }, 1] },
        "result": 1,
        "data": null
    },
    {
        "description": "Coalesce an emitted error",
        "rule": { "try": [{ "+": [{ "val": "hello" }]}, 1] },
        "result": 1,
        "data": { "hello": "world" }
    },
    {
        "description": "Errors are just data",
        "rule": { "try": [{ "val": "x" }, 1]},
        "data": { "x": { "error": "Some error" }},
        "result": 1
    },
    {
        "description": "Can promote a soft error to a hard error with panic",
        "rule": { "panic": { "error": "Some error" } },
        "error": true,
        "data": null
    },
    {
        "description": "Panic with an error emitted from an operator",
        "rule": { "panic": [{ "/": [1, 0] }] },
        "error": true,
        "data": null
    },
    {
        "description": "Panic with an error pulled from context",
        "rule": { "panic": [{ "val": "x" }] },
        "error": true,
        "data": { "x": { "error": "Some error" } }
    }
]