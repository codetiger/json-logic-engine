[
    "# Collection of Tests for Try",
    {
        "description": "Coalesce an error",
        "rule": { "try": [{ "error": "Some error" }, 1] },
        "result": 1,
        "data": null
    },
    {
        "description": "Coalesce an error emitted from an operator",
        "rule": { "try": [{ "/": [0, 0]}, 1] },
        "result": 1,
        "data": { "hello": "world" }
    },
    {
        "description": "Panics if none of the values are valid",
        "rule": { "try": [{ "error": "Some error" }, { "error": "Some other error" }] },
        "error": true,
        "data": null
    },
    {
        "description": "Panics if none of the values are valid (2)",
        "rule": { "try": [{ "error": "Some error" }, { "/": [0, 0] }] },
        "error": true,
        "data": null
    },
    {
        "description": "Can promote a soft error to a hard error",
        "rule": { "try": { "error": "Some error" } },
        "error": true,
        "data": null
    },
    {
        "description": "Panic with an error emitted from an operator",
        "rule": { "try": [{ "/": [1, 0] }] },
        "error": true,
        "data": null
    },
    {
        "description": "Panic within an iterator",
        "rule": { "map": [[1, 2, 3], { "try": [{ "/": [0,0] }] }] },
        "error": true,
        "data": null
    },
    {
        "description": "Panic if the user is not an admin",
        "rule": { "try": [{ "if": [{"val": ["user", "admin"]}, true, { "error": "Not an admin" }] }] },
        "data": { "user": { "admin": false } },
        "error": true
    },
    {
        "description": "Try can work further up the AST with Exceptions",
        "rule": {
            "try": [{
                "if": [
                    true,
                    { "map": [[1,2,3], {"/": [0, 0] }]},
                    null
                ]
            }, 10]
        },
        "result": 10,
        "data": null
    },
    {
        "description": "The context switches for the try coalescing to the previous error",
        "rule": {
            "try": [
                { "if": [true, { "error": "Some error" }, null] },
                { "val": [] }
            ]
        },
        "result": { "error": "Some error"},
        "data": null
    },
    {
        "description": "Try can work further up the AST with Exceptions, and return the error",
        "rule": {
            "try": [{
                "if": [
                    true,
                    { "map": [[1,2,3], {"/": [0, 0] }]},
                    null
                ]
            }, { "val": [] }]
        },
        "result": { "error": "NaN" },
        "data": null
    },
    "# Not Proposed",
    {
        "description": "Try can work further up the AST with Exceptions; Grabbing other Context value",
        "rule": {
            "try": [{
                "if": [
                    true,
                    { "map": [[1,2,3], {"/": [0, 0] }]},
                    null
                ]
            }, { "val": [[2], "fallback"] }]
        },
        "result": "Hello",
        "data": { "fallback": "Hello" }
    }
]