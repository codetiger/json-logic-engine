[
    "Basic Checks",
    {
        "description": "Two true values should be true",
        "rule": { "or": [true, true] },
        "data": null,
        "result": true
    },
    {
        "description": "false or true should be true",
        "rule": { "or": [false, true] },
        "data": null,
        "result": true
    },
    {
        "description": "true or false should be true",
        "rule": { "or": [true, false] },
        "data": null,
        "result": true
    },
    {
        "description": "Two false values should be false",
        "rule": { "or": [false, false] },
        "data": null,
        "result": false
    },
    {
        "description": "All true values should be true",
        "rule": { "or": [true, true, true] },
        "data": null,
        "result": true
    },
    {
        "description": "Any true value should be true",
        "rule": { "or": [true, true, false] },
        "data": null,
        "result": true
    },
    {
        "description": "Or with a single true value should be true",
        "rule": { "or": [true] },
        "data": null,
        "result": true
    },
    {
        "description": "When all values are truthy, the first truthy value should be returned",
        "rule": { "or": [1, 2, 3] },
        "data": null,
        "result": 1
    },
    {
        "description": "When all values are truthy, the first truthy value should be returned (2)",
        "rule": { "or": [true, 1, {}] },
        "data": null,
        "result": true
    },
    {
        "description": "Or with a single falsey value should be return the falsy value",
        "rule": { "or": [[]] },
        "data": null,
        "result": []
    },
    {
        "description": "Or with a single falsey value should be return the falsy value (2)",
        "rule": { "or": [0] },
        "data": null,
        "result": 0
    },
    {
        "description": "Or with a single falsey value should be return the falsy value (3)",
        "rule": { "or": [""] },
        "data": null,
        "result": ""
    },
    {
        "description": "Or with a single false value should be false",
        "rule": { "or": [false] },
        "data": null,
        "result": false
    },
    {
        "description": "Or with 2 truthy values should return the first truthy value",
        "rule": { "or": [1, 3] },
        "data": null,
        "result": 1
    },
    {
        "description": "Or with a truthy value and a false value should return the truthy value",
        "rule": { "or": [3, false] },
        "data": null,
        "result": 3
    },
    {
        "description": "Or with a truthy value and a false value should return the truthy value (2)",
        "rule": { "or": [false, 3] },
        "data": null,
        "result": 3
    },
    {
        "description": "Empty array is falsy, so it is not returned if the second argument is truthy",
        "rule": { "or": [[], true] },
        "data": null,
        "result": true
    },
    {
        "description": "0 is falsy, so it is not returned if the second argument is truthy",
        "rule": { "or": [0, true] },
        "data": null,
        "result": true
    },
    {
        "description": "Empty string is falsy, so it is not returned if the second argument is truthy",
        "rule": { "or": ["", true] },
        "data": null,
        "result": true
    },
    {
        "description": "0 as a string is truthy, so the first truthy value is returned",
        "rule": { "or": ["0", true] },
        "data": null,
        "result": "0"
    },
    {
        "description": "Or with no arguments should return false",
        "rule": { "or": [] },
        "data": null,
        "result": null
    },
    "Valid Arguments Checks",
    {
        "description": "Or with non-array arguments should throw",
        "rule": { "or": true },
        "data": null,
        "error": { "type": "Invalid Arguments" }
    },
    "Short Circuiting Checks",
    {
        "description": "Or will not interpret the second argument if the first is false",
        "rule": { "or": [true, { "throw": "Not Lazy" }] },
        "data": null,
        "result": true
    },
    {
        "description": "Or will not interpret the second argument if the first is falsy",
        "rule": { "or": [1, { "throw": "Not Lazy" }] },
        "data": null,
        "result": 1
    },
    {
        "description": "Or will not interpret the nth argument if any value before it is false",
        "rule": { "or": [false, 0, null, { "val": [] }, [], 4, { "throw": "Not Lazy" }] },
        "data": null,
        "result": 4
    }
]